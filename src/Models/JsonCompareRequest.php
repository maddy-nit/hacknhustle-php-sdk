<?php

declare(strict_types=1);

/*
 * HackNHustleIONDIDLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace HackNHustleIONDIDLib\Models;

use stdClass;

class JsonCompareRequest implements \JsonSerializable
{
    /**
     * @var JsonFirst
     */
    private $jsonFirst;

    /**
     * @var JsonSecond
     */
    private $jsonSecond;

    /**
     * @param JsonFirst $jsonFirst
     * @param JsonSecond $jsonSecond
     */
    public function __construct(JsonFirst $jsonFirst, JsonSecond $jsonSecond)
    {
        $this->jsonFirst = $jsonFirst;
        $this->jsonSecond = $jsonSecond;
    }

    /**
     * Returns Json First.
     */
    public function getJsonFirst(): JsonFirst
    {
        return $this->jsonFirst;
    }

    /**
     * Sets Json First.
     *
     * @required
     * @maps json_first
     */
    public function setJsonFirst(JsonFirst $jsonFirst): void
    {
        $this->jsonFirst = $jsonFirst;
    }

    /**
     * Returns Json Second.
     */
    public function getJsonSecond(): JsonSecond
    {
        return $this->jsonSecond;
    }

    /**
     * Sets Json Second.
     *
     * @required
     * @maps json_second
     */
    public function setJsonSecond(JsonSecond $jsonSecond): void
    {
        $this->jsonSecond = $jsonSecond;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['json_first']  = $this->jsonFirst;
        $json['json_second'] = $this->jsonSecond;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
